let num

$("#cargarhtml").load('metodo1.html');   
function cargarmetodo(metodo) {
    
    if(metodo=="pruebas.html"){

    }else{
        pseudo=[]
    }
   
    num = respueta
    respueta = "";
    $("#cargarhtml").load(metodo);
}

let pseudo = [];
let variable = false
//variables globales
let nxa = []
let respueta=""
function prueba(){

    let vara= parseInt(formdatos.vara)
    let a= parseInt(formdatos.a.value)
    let b= parseInt(formdatos.b.value)
    let c= parseInt(formdatos.vc.value)
    let m= parseInt(formdatos.m.value)
    let vi = parseInt(formdatos.vi.value)
    
let cantidad=parseInt(formdatos.cantidad.value), contenido=""
let numeros = [vi]
let cifras = 0 

    for(let i=0;i<=cantidad;i++){
    
        //FORMULA
        numeros[i+1]= ((a*(Math.pow(numeros[i],2))) + (b*numeros[i]) + c) % m
        resta = numeros[i]/(m-1)
        console.log(numeros[i],(m-1))
        
        // PINTANDO TABLA D ERESULTADOS
        contenido=contenido+"<tr>"+
        "<td>"+i+"</td>"+
        "<td>"+numeros[i]+"</td>"+
        "<td>"+resta.toFixed(4)+"</td>"+
        "</tr>"
    }
    document.getElementById("resultados").innerHTML = contenido
    console.log(numeros)
    
}

//  GUARDAR ARCHIVO DE NÚMEROS GENERADOS
let c = "";

function Guardar(){
    if(respueta==""){
        console.log("Generar números")
    }else{
        var element = document.createElement('a');
        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(respueta));
        element.setAttribute('download', "Números.txt");
        element.style.display = 'none';
        document.body.appendChild(element);
        element.click();
        document.body.removeChild(element);
    }
}

// METODO 1
let cantidad = 0
function metodo1(){
    respueta=""
    pseudo = [];
    variable = true
    console.log("si")
    let nombre = "ALG. DE CUADRADOS MEDIOS"
    //let cantidad= parseInt(formdatos.cantidad.value)
    let vi = parseInt(formdatos.vi.value)
    let ny = []   
    cantidad=parseInt(formdatos.cantidad.value), contenido=""
    let nx = [vi]
    let nr = []
    let cifras= (vi.toString(10)).length
    let divi = divisor(cifras);
    for(let i=0;i<cantidad;i++){
        //FORMULA
        ny[i]= Math.pow(nx[i],2)  
        nx[i+1] = extraernumeros(ny[i],cifras)
        nr[i]
        contenido=contenido+"<tr>"+
        "<td>"+ny[i]+"</td>"+
        "<td>"+nx[i+1]+"</td>"+
        "<td>"+nx[i+1] / divi+"</td>"+
        "</tr>"
        // console.log(ny)
        pseudo[i]=nx[i+1] / divi
        respueta = respueta+" "+(nx[i+1] / divi)
    }
    document.getElementById("resultados").innerHTML = contenido
    
}
function extraernumeros(numero, cifras){

    numero = numero.toString(10)
    // console.log("numero:: ",numero)
    if(cifras % 2 !==0){
        if (numero.length % 2 === 0) {
            numero = '0'+numero;
        }
    }else{
        if (numero.length % 2 !== 0) {
            numero = '0'+numero;
        }
    }

    let cant = numero.length
    let posicion=0
    let extraido = ''
    

    posicion = ((cant/cifras) % 1 ===0) ? cant / cifras : (cant / cifras) + 1

    extraido = numero.substring(posicion,posicion+cifras)

    //console.log("numero:: ",numero,"Cantidad:: ",cant," Cifras:: ", cifras, "Ri::", extraido, "POS::",posicion)

    return extraido

}
function divisor(cant){
    
    let divi = '1'
    for(let i=1;i<=cant;i++){
        divi = divi + '0'
    }

    return parseInt(divi)
}

//METODO 2
function metodo2() {
    respueta=""
    let nombre = "ALG. DE PRODUCTOS MEDIOS"
    pseudo=[]
    let vx=[],ny=[],nr=[],a,b,contenido=""
    
    a=parseInt(formdatos.xcero.value)
    b=parseInt(formdatos.xuno.value)
    cantidad=parseInt(formdatos.cantidad.value)
    let cifras= ((a.toString(10)).length > (b.toString(10)).length) ? (a.toString(10)).length:(b.toString(10)).length
    let divi = divisor(cifras);
    console.log(cifras)
    for (let i = 0; i < cantidad; i++) {

        if(i===0){
            ny[i] = a*b;
            
        }else if(i===1){
            ny[i]= b*vx[i]
            
        }else{
            
            ny[i] = vx[i-1] * vx[i]
        
        }
        
        vx[i+1]= extraernumeros(ny[i],cifras)
        
        contenido=contenido+"<tr>"+
        "<td>"+i+"</td>"+
        "<td>"+ny[i]+"</td>"+
        "<td>"+vx[i+1]+"</td>"+
        "<td>"+vx[i+1] / divi+"</td>"+
        "</tr>"
        pseudo[i]=vx[i+1] / divi
        respueta=respueta+" "+(vx[i+1] / divi)
    }

    document.getElementById("resultados").innerHTML = contenido
}

//METODO 3
function metodo3() {

    respueta=""
    pseudo=[]
    let nombre ="ALGORITMO DE MULTIPLICADOR CONSTANTE",contenido=""
    let ny=[],nx=[parseInt(formdatos.xcero.value)],c=parseInt(formdatos.c.value)
    cantidad =parseInt(formdatos.cantidad.value)
    let cifras= (nx[0].toString(10)).length,divi = divisor(cifras)
    for (let i = 0; i < cantidad; i++) {
        
        ny[i] = c * nx[i]
        nx[i+1]= extraernumeros(ny[i],cifras)

        contenido=contenido+"<tr>"+
        "<td>"+i+"</td>"+
        "<td>"+ny[i]+"</td>"+
        "<td>"+nx[i+1]+"</td>"+
        "<td>"+nx[i+1] / divi+"</td>"+
        "</tr>"
        pseudo[i]=nx[i+1] / divi
        respueta=respueta +" "+(nx[i+1] / divi)
        
    }
    
    document.getElementById("resultados").innerHTML = contenido
    console.log(ny)
}

//METODO 4
function metodo4() {

    let nombre ="ALGORITMO LINEAL",contenido="",a=parseInt(formdatos.a.value),m=parseInt(formdatos.m.value)
    let nx=[parseInt(formdatos.xcero.value)],c=parseInt(formdatos.c.value)
    cantidad =parseInt(formdatos.cantidad.value)
    respueta=""
    pseudo=[]
    for (let i = 0; i < cantidad; i++) {
        
        nx[i+1]= (a*nx[i]+c) % m
        contenido=contenido+"<tr>"+
        "<td>"+i+"</td>"+
        "<td>"+nx[i+1]+"</td>"+
        "<td>"+(nx[i+1] / (m-1)).toFixed(4)+"</td>"+
        "</tr>"
        pseudo[i]=(nx[i+1] / (m-1)).toFixed(4)
        respueta=respueta+" "+((nx[i+1] / (m-1)).toFixed(4))
    }
    
    document.getElementById("resultados").innerHTML = contenido
    console.log(nx)
}

//METODO 5
function metodo5() {
    respueta=""
    pseudo=[]
    let nombre ="ALG. CONGUENCIAL MULTIPLICATIVO",contenido=""
    let m,q,nx=[parseInt(formdatos.xcero.value)],g,n

    cantidad = parseInt(formdatos.cantidad.value)
    k = parseInt(formdatos.k.value)
    m = parseInt(formdatos.m.value)
    q = parseInt(formdatos.q.value)

    for (let i = 0; i < cantidad; i++) {
        
        nx[i+1] = (q * nx[i]) % m

        contenido=contenido+"<tr>"+
        "<td>"+i+"</td>"+
        "<td>"+nx[i+1]+"</td>"+
        "<td>"+(nx[i+1] / (m-1)).toFixed(4)+"</td>"+
        "</tr>"
        pseudo[i]=(nx[i+1] / (m-1)).toFixed(4)
        respueta=respueta+" "+((nx[i+1] / (m-1)).toFixed(4))
    }

    document.getElementById("resultados").innerHTML = contenido

}


//METODO 6
function metodo6() {
    respueta=""
    pseudo=[]
    let nombre ="ALG. CONGRUENCIAL ADITIVA"
    let m,n,contenido=""

    cantidad = parseInt(formdatos.cantidad.value)
    m = parseInt(formdatos.m.value)
    n = nxa.length

    for (let i = 0; i < cantidad; i++) {
        
        nxa[i+n] = (nxa[(n-1)+i]+nxa[i]) % m
        
        console.log(nxa[(n-1)+i], nxa[i])

        contenido=contenido+"<tr>"+
        "<td>"+(i+n)+"</td>"+
        "<td>"+nxa[i+n]+"</td>"+
        "<td>"+(nxa[i+n] / (m-1)).toFixed(4)+"</td>"+
        "</tr>"
        pseudo[i]=(nxa[i+n] / (m-1)).toFixed(4)
        respueta=respueta+" "+(nxa[i+n] / (m-1)).toFixed(4)
    }

    document.getElementById("resultados").innerHTML = contenido
}
function anadirnumeros() {
    
    nxa.push(parseInt(formdatos.xcero.value))
    document.getElementById("numeros").innerHTML += "<tr>"+
        "<td>"+parseInt(formdatos.xcero.value)+"</td>"+
        "</tr>"
}

// METODO 7
function metodo7(){

    let nombre = "ALG. BLUM"

    let vi = parseInt(formdatos.vi.value)
    let m = parseInt(formdatos.m.value), contenido=""
    cantidad=parseInt(formdatos.cantidad.value)
    let nx = [vi]
    pseudo=[]
    respueta=""

    for(let i=0;i<cantidad;i++){

        //FORMULA
        nx[i+1]= Math.pow(nx[i],2)  % m

        console.log(nx)
        contenido=contenido+"<tr>"+
        "<td>"+i+"</td>"+
        "<td>"+nx[i+1]+"</td>"+
        "<td>"+(nx[i+1] / (m-1)).toFixed(4)+"</td>"+
        "</tr>"
        pseudo[i] = (nx[i+1] / (m-1)).toFixed(4)
        respueta=respueta+" "+(nx[i+1] / (m-1)).toFixed(4)
        // console.log(ny)
    }
    document.getElementById("resultados").innerHTML = contenido
    
}



//////////////////    PRUEBAS NÚMEROS PSEUDOALEATORIOS //////

///ENCONTRAR EL NIVEL DE CONFIANZA  
    function confianza(confianza){
        var nivel = 0
        var arre = [];
        arre.push({
            o: 68, v: 1.00},
            {o: 75, v: 1.15},
            {o:80, v:1.28},
            {o:85,v: 1.44},
            {o:90, v:1.65},
            {o: 91,v: 1.69},
            {o:92, v:1.75},
            {o:93, v:1.8},
            {o:94,v: 1.88},
            {o:95, v:1.96},
            {o:95.4,v: 2},
            {o:97.5,v: 2.24},
            {o:99,v: 2.58},
            {o:99.7,v:3.00},
            {o:99.9,v: 3.29
        })
        arre.map((value, key) => {
            if(value.o == confianza){
            nivel = value.v
            }
        });
        return nivel;
    }

//Hallar el chi-cuadrado
function ChiCuadrado(num1,num2){
    var chi =[]
    chi.push(
        {ini:["00","0.001","0.0025","0.005","0.01","0.025","0.05","0.1","0.15","0.2","0.25","0.3","0.35","0.4","0.45","0.5","0.55","0.6","0.65","0.7","0.75","0.8","0.85","0.9","0.95","0.975","0.99","0.995","0.9975","0.999"]},
        {cc:["1","10.8274","9.1404","7.8794","6.6349","5.0239","3.8415","2.7055","2.0722","1.6424","1.3233","1.0742","0.8735","0.7083","0.5707","0.4549","0.3573","0.275","0.2059","0.1485","0.1015","0.0642","0.0358","0.0158","0.0039","0.001","0.0002","0","0","0"]},
        {cc:["2","13.815","11.9827","10.5965","9.2104","7.3778","5.9915","4.6052","3.7942","3.2189","2.7726","2.4079","2.0996","1.8326","1.597","1.3863","1.1957","1.0217","0.8616","0.7133","0.5754","0.4463","0.325","0.2107","0.1026","0.0506","0.0201","0.01","0.005","0.002"]},
        {cc:["3","16.266","14.3202","12.8381","11.3449","9.3484","7.8147","6.2514","5.317","4.6416","4.1083","3.6649","3.2831","2.9462","2.643","2.366","2.1095","1.8692","1.6416","1.4237","1.2125","1.0052","0.7978","0.5844","0.3518","0.2158","0.1148","0.0717","0.0449","0.0243"]},
        {cc:["4","18.4662","16.4238","14.8602","13.2767","11.1433","9.4877","7.7794","6.7449","5.9886","5.3853","4.8784","4.4377","4.0446","3.6871","3.3567","3.0469","2.7528","2.4701","2.1947","1.9226","1.6488","1.3665","1.0636","0.7107","0.4844","0.2971","0.207","0.1449","0.0908"]},
        {cc:["5","20.5147","18.3854","16.7496","15.0863","12.8325","11.0705","9.2363","8.1152","7.2893","6.6257","6.0644","5.5731","5.1319","4.7278","4.3515","3.9959","3.6555","3.3251","2.9999","2.6746","2.3425","1.9938","1.6103","1.1455","0.8312","0.5543","0.4118","0.3075","0.2102"]},
        {cc:["6","22.4575","20.2491","18.5475","16.8119","14.4494","12.5916","10.6446","9.4461","8.5581","7.8408","7.2311","6.6948","6.2108","5.7652","5.3481","4.9519","4.5702","4.1973","3.8276","3.4546","3.0701","2.6613","2.2041","1.6354","1.2373","0.8721","0.6757","0.5266","0.381"]},
        {cc:["7","24.3213","22.0402","20.2777","18.4753","16.0128","14.0671","12.017","10.7479","9.8032","9.0371","8.3834","7.8061","7.2832","6.8","6.3458","5.9125","5.4932","5.0816","4.6713","4.2549","3.8223","3.3583","2.8331","2.1673","1.6899","1.239","0.9893","0.7945","0.5985"]},
        {cc:["8","26.1239","23.7742","21.9549","20.0902","17.5345","15.5073","13.3616","12.0271","11.0301","10.2189","9.5245","8.9094","8.3505","7.8325","7.3441","6.8766","6.4226","5.9753","5.5274","5.0706","4.5936","4.0782","3.4895","2.7326","2.1797","1.6465","1.3444","1.1042","0.8571"]},
        {cc:["9","27.8767","25.4625","23.5893","21.666","19.0228","16.919","14.6837","13.288","12.2421","11.3887","10.6564","10.006","9.4136","8.8632","8.3428","7.8434","7.357","6.8763","6.3933","5.8988","5.3801","4.8165","4.1682","3.3251","2.7004","2.0879","1.7349","1.4501","1.1519"]},
        {cc:["10","29.5879","27.1119","25.1881","23.2093","20.4832","18.307","15.9872","14.5339","13.442","12.5489","11.7807","11.0971","10.4732","9.8922","9.3418","8.8124","8.2955","7.7832","7.2672","6.7372","6.1791","5.5701","4.8652","3.9403","3.247","2.5582","2.1558","1.8274","1.4787"]},
        {cc:["11","31.2635","28.7291","26.7569","24.725","21.92","19.6752","17.275","15.7671","14.6314","13.7007","12.8987","12.1836","11.5298","10.9199","10.341","9.7831","9.2373","8.6952","8.1479","7.5841","6.9887","6.3364","5.5778","4.5748","3.8157","3.0535","2.6032","2.2321","1.8338"]},
        {cc:["12","32.9092","30.3182","28.2997","26.217","23.3367","21.0261","18.5493","16.9893","15.812","14.8454","14.0111","13.2661","12.5838","11.9463","11.3403","10.7553","10.182","9.6115","9.0343","8.4384","7.8073","7.1138","6.3038","5.226","4.4038","3.5706","3.0738","2.6612","2.2141"]},
        {cc:["13","34.5274","31.883","29.8193","27.6882","24.7356","22.362","19.8119","18.202","16.9848","15.9839","15.1187","14.3451","13.6356","12.9717","12.3398","11.7288","11.1291","10.5315","9.9257","9.2991","8.6339","7.9008","7.0415","5.8919","5.0087","4.1069","3.565","3.1118","2.6172"]},
        {cc:["14","36.1239","33.4262","31.3194","29.1412","26.1189","23.6848","21.0641","19.4062","18.1508","17.1169","16.2221","15.4209","14.6853","13.9961","13.3393","12.7034","12.0785","11.4548","10.8215","10.1653","9.4673","8.6963","7.7895","6.5706","5.6287","4.6604","4.0747","3.582","3.0407"]},
        {cc:["15","37.6978","34.9494","32.8015","30.578","27.4884","24.9958","22.3071","20.603","19.3107","18.2451","17.3217","16.494","15.7332","15.0197","14.3389","13.679","13.0298","12.3809","11.7212","11.0365","10.307","9.4993","8.5468","7.2609","6.2621","5.2294","4.6009","4.0697","3.4825"]},
        {cc:["16","39.2518","36.4555","34.2671","31.9999","28.8453","26.2962","23.5418","21.7931","20.4651","19.3689","18.4179","17.5646","16.7795","16.0425","15.3385","14.6555","13.9827","13.3096","12.6243","11.9122","11.1521","10.309","9.3122","7.9616","6.9077","5.8122","5.1422","4.5734","3.9417"]},
        {cc:["17","40.7911","37.9462","35.7184","33.4087","30.191","27.5871","24.769","22.977","21.6146","20.4887","19.511","18.633","17.8244","17.0646","16.3382","15.6328","14.9373","14.2406","13.5307","12.7919","12.0023","11.1249","10.0852","8.6718","7.5642","6.4077","5.6973","5.0916","4.4162"]},
        {cc:["18","42.3119","39.422","37.1564","34.8052","31.5264","28.8693","25.9894","24.1555","22.7595","21.6049","20.6014","19.6993","18.8679","18.086","17.3379","16.6108","15.8932","15.1738","14.4399","13.6753","12.857","11.9462","10.8649","9.3904","8.2307","7.0149","6.2648","5.6234","4.9048"]},
        {cc:["19","43.8194","40.8847","38.5821","36.1908","32.8523","30.1435","27.2036","25.3289","23.9004","22.7178","21.6891","20.7638","19.9102","19.1069","18.3376","17.5894","16.8504","16.1089","15.3517","14.562","13.7158","12.7727","11.6509","10.117","8.9065","7.6327","6.8439","6.1673","5.4067"]},
        {cc:["20","45.3142","42.3358","39.9969","37.5663","34.1696","31.4104","28.412","26.4976","25.0375","23.8277","22.7745","21.8265","20.9514","20.1272","19.3374","18.5687","17.8088","17.0458","16.2659","15.4518","14.5784","13.6039","12.4426","10.8508","9.5908","8.2604","7.4338","6.7228","5.921"]},
        {cc:["21","46.7963","43.7749","41.4009","38.9322","35.4789","32.6706","29.6151","27.662","26.1711","24.9348","23.8578","22.8876","21.9915","21.147","20.3372","19.5485","18.7683","17.9843","17.1823","16.3444","15.4446","14.4393","13.2396","11.5913","10.2829","8.8972","8.0336","7.2889","6.4467"]},
        {cc:["22","48.2676","45.2041","42.7957","40.2894","36.7807","33.9245","30.8133","28.8224","27.3015","26.0393","24.939","23.9473","23.0307","22.1663","21.337","20.5288","19.7288","18.9243","18.1007","17.2396","16.314","15.2787","14.0415","12.338","10.9823","9.5425","8.6427","7.8648","6.9829"]},
        {cc:["23","49.7276","46.6231","44.1814","41.6383","38.0756","35.1725","32.0069","29.9792","28.4288","27.1413","26.0184","25.0055","24.0689","23.1852","22.3369","21.5095","20.6902","19.8657","19.0211","18.1373","17.1865","16.1219","14.848","13.0905","11.6885","10.1957","9.2604","8.4503","7.5291"]},
        {cc:["24","51.179","48.0336","45.5584","42.9798","39.3641","36.415","33.1962","31.1325","29.5533","28.2412","27.096","26.0625","25.1064","24.2037","23.3367","22.4908","21.6525","20.8084","19.9432","19.0373","18.0618","16.9686","15.6587","13.8484","12.4011","10.8563","9.8862","9.0441","8.0847"]},
        {cc:["25","52.6187","49.4351","46.928","44.314","40.6465","37.6525","34.3816","32.2825","30.6752","29.3388","28.1719","27.1183","26.143","25.2218","24.3366","23.4724","22.6156","21.7524","20.867","19.9393","18.9397","17.8184","16.4734","14.6114","13.1197","11.524","10.5196","9.6462","8.6494"]},
        {cc:["26","54.0511","50.8291","48.2898","45.6416","41.9231","38.8851","35.5632","33.4295","31.7946","30.4346","29.2463","28.173","27.1789","26.2395","25.3365","24.4544","23.5794","22.6975","21.7924","20.8434","19.8202","18.6714","17.2919","15.3792","13.8439","12.1982","11.1602","10.2561","9.2222"]},
        {cc:["27","55.4751","52.2152","49.645","46.9628","43.1945","40.1133","36.7412","34.5736","32.9117","31.5284","30.3193","29.2266","28.2141","27.2569","26.3363","25.4367","24.544","23.6437","22.7192","21.7494","20.703","19.5272","18.1139","16.1514","14.5734","12.8785","11.8077","10.8733","9.8029"]},
        {cc:["28","56.8918","53.5939","50.9936","48.2782","44.4608","41.3372","37.9159","35.715","34.0266","32.6205","31.3909","30.2791","29.2486","28.274","27.3362","26.4195","25.5092","24.5909","23.6475","22.6572","21.588","20.3857","18.9392","16.9279","15.3079","13.5647","12.4613","11.4973","10.3907"]},
        {cc:["29","58.3006","54.9662","52.3355","49.5878","45.7223","42.5569","39.0875","36.8538","35.1394","33.7109","32.4612","31.3308","30.2825","29.2908","28.3361","27.4025","26.4751","25.5391","24.577","23.5666","22.4751","21.2468","19.7677","17.7084","16.0471","14.2564","13.1211","12.1278","10.9861"]},
        {cc:["30","59.7022","56.3325","53.6719","50.8922","46.9792","43.773","40.256","37.9902","36.2502","34.7997","33.5302","32.3815","31.3159","30.3073","29.336","28.3858","27.4416","26.4881","25.5078","24.4776","23.3641","22.1103","20.5992","18.4927","16.7908","14.9535","13.7867","12.7646","11.5876"]},
        {cc:["31","61.098","57.6921","55.0025","52.1914","48.2319","44.9853","41.4217","39.1244","37.3591","35.8871","34.5981","33.4314","32.3486","31.3235","30.3359","29.3694","28.4087","27.4381","26.4397","25.3901","24.2551","22.9762","21.4336","19.2806","17.5387","15.6555","14.4577","13.4073","12.1961"]},
        {cc:["32","62.4873","59.0461","56.328","53.4857","49.4804","46.1942","42.5847","40.2563","38.4663","36.973","35.6649","34.4804","33.3809","32.3394","31.3359","30.3533","29.3763","28.3889","27.3728","26.3041","25.1478","23.8442","22.2706","20.0719","18.2908","16.3622","15.134","14.0555","12.8104"]},
        {cc:["33","63.8694","60.3953","57.6483","54.7754","50.7251","47.3999","43.7452","41.3861","39.5718","38.0575","36.7307","35.5287","34.4126","33.3551","32.3358","31.3375","30.3444","29.3405","28.3069","27.2194","26.0422","24.7143","23.1102","20.8665","19.0467","17.0735","15.8152","14.7092","13.4312"]},
        {cc:["34","65.2471","61.7382","58.9637","56.0609","51.966","48.6024","44.9032","42.514","40.6756","39.1408","37.7954","36.5763","35.4438","34.3706","33.3357","32.3219","31.313","30.2928","29.2421","28.1361","26.9383","25.5864","23.9522","21.6643","19.8062","17.7891","16.5013","15.3679","14.0568"]},
        {cc:["35","66.6192","63.076","60.2746","57.342","53.2033","49.8018","46.0588","43.6399","41.778","40.2228","38.8591","37.6231","36.4746","35.3858","34.3356","33.3065","32.2821","31.2458","30.1782","29.054","27.8359","26.4604","24.7966","22.465","20.5694","18.5089","17.1917","16.0315","14.6881"]},
        {cc:["36","67.985","64.4097","61.5811","58.6192","54.4373","50.9985","47.2122","44.7641","42.8788","41.3036","39.922","38.6693","37.5049","36.4008","35.3356","34.2913","33.2517","32.1995","31.1152","29.973","28.735","27.3363","25.6433","23.2686","21.3359","19.2326","17.8868","16.7","15.3243"]},
        {cc:["37","69.3476","65.7384","62.8832","59.8926","55.668","52.1923","48.3634","45.8864","43.9782","42.3833","40.9839","39.7148","38.5348","37.4156","36.3355","35.2764","34.2216","33.1539","32.0532","30.8933","29.6355","28.2138","26.4921","24.0749","22.1056","19.9603","18.5859","17.373","15.9652"]},
        {cc:["38","70.7039","67.0628","64.1812","61.162","56.8955","53.3835","49.5126","47.0072","45.0763","43.4619","42.045","40.7597","39.5643","38.4302","37.3354","36.2617","35.192","34.1089","32.9919","31.8146","30.5373","29.0931","27.343","24.8839","22.8785","20.6914","19.2888","18.0501","16.6109"]},
        {cc:["39","72.055","68.383","65.4753","62.4281","58.1201","54.5722","50.6598","48.1263","46.173","44.5395","43.1053","41.804","40.5935","39.4446","38.3354","37.2472","36.1628","35.0645","33.9315","32.7369","31.4405","29.9739","28.1958","25.6954","23.6543","21.4261","19.9958","18.7318","17.2612"]},
        {cc:["40","73.4029","69.6987","66.766","63.6908","59.3417","55.7585","51.805","49.2438","47.2685","45.616","44.1649","42.8477","41.6222","40.4589","39.3353","38.2328","37.134","36.0207","34.8719","33.6603","32.3449","30.8563","29.0505","26.5093","24.4331","22.1642","20.7066","19.4171","17.9166"]},
        {cc:["45","80.0776","76.2229","73.166","69.9569","65.4101","61.6562","57.5053","54.8105","52.7288","50.9849","49.4517","48.0584","46.7607","45.5274","44.3351","43.1638","41.995","40.8095","39.5847","38.291","36.8844","35.2895","33.3504","30.6123","28.3662","25.9012","24.311","22.8994","21.2509"]},
        {cc:["50","86.6603","82.6637","79.4898","76.1538","71.4202","67.5048","63.1671","60.346","58.1638","56.3336","54.7228","53.2576","51.8916","50.5923","49.3349","48.0986","46.8638","45.61","44.3133","42.9421","41.4492","39.7539","37.6886","34.7642","32.3574","29.7067","27.9908","26.4636","24.6736"]},
        {cc:["55","93.1671","89.0344","85.7491","82.292","77.3804","73.3115","68.7962","65.855","63.5772","61.665","59.9804","58.4469","57.016","55.6539","54.3348","53.0367","51.7391","50.4204","49.0554","47.6105","46.0356","44.2448","42.0596","38.9581","36.3981","33.5705","31.7349","30.0974","28.1731"]},
        {cc:["60","99.6078","95.3443","91.9518","88.3794","83.2977","79.082","74.397","71.3411","68.9721","66.9815","65.2265","63.6277","62.1348","60.7128","59.3347","57.9775","56.62","55.2394","53.8091","52.2938","50.6406","48.7587","46.4589","43.188","40.4817","37.4848","35.5344","33.7909","31.7381"]},
        {cc:["70","112.3167","107.8079","104.2148","100.4251","95.0231","90.5313","85.527","82.2553","79.7147","77.5766","75.6893","73.9677","72.3583","70.8236","69.3345","67.8664","66.3961","64.899","63.346","61.6983","59.8978","57.8443","55.3289","51.7393","48.7575","45.4417","43.2753","41.3323","39.0358"]},
        {cc:["80","124.8389","120.1018","116.3209","112.3288","106.6285","101.8795","96.5782","93.1058","90.4053","88.1303","86.1197","84.284","82.5663","80.9266","79.3343","77.7631","76.1879","74.5825","72.9153","71.1445","69.207","66.9938","64.2778","60.3915","57.1532","53.54","51.1719","49.043","46.5197"]},
        {cc:["90","137.2082","132.2554","128.2987","124.1162","118.1359","113.1452","107.565","103.904","101.0537","98.6499","96.5238","94.5809","92.7614","91.0234","89.3342","87.6661","85.9925","84.2854","82.5111","80.6247","78.5584","76.1954","73.2911","69.126","65.6466","61.754","59.1963","56.8918","54.1559"]},
        {cc:["100","149.4488","144.2925","140.1697","135.8069","129.5613","124.3421","118.498","114.6588","111.6667","109.1412","106.9058","104.8615","102.9459","101.1149","99.3341","97.5744","95.8078","94.0046","92.129","90.1332","87.9453","85.4406","82.3581","77.9294","74.2219","70.065","67.3275","64.8571","61.9182"]},
        {cc:["120","173.6184","168.0814","163.6485","158.95","152.2113","146.5673","140.2326","136.062","132.8063","130.0546","127.6159","125.3833","123.289","121.285","119.334","117.4041","115.4646","113.4825","111.4186","109.2197","106.8056","104.0374","100.6236","95.7046","91.5726","86.9233","83.8517","81.0726","77.7555"]},
        {cc:["140","197.4498","191.5653","186.8465","181.8405","174.6478","168.613","161.827","157.3517","153.8537","150.8941","148.2686","145.8629","143.6043","141.4413","139.3339","137.2476","135.1491","133.0028","130.7657","128.38","125.758","122.7476","119.0293","113.6594","109.1368","104.0343","100.6547","97.5908","93.9253"]},
        {cc:["160","221.0197","214.8081","209.8238","204.53","196.9152","190.5164","183.3106","178.5517","174.8283","171.6752","168.8759","166.3092","163.8977","161.5868","159.3338","157.1019","154.8555","152.5564","150.1583","147.5988","144.7834","141.5475","137.5457","131.756","126.87","121.3457","117.6791","114.3496","110.3592"]},
        {cc:["180","244.3723","237.8548","232.6198","227.0563","219.0442","212.3039","204.7036","199.6786","195.7434","192.4086","189.4462","186.7282","184.1732","181.7234","179.3338","176.9652","174.5799","172.1373","169.5879","166.8653","163.8682","160.4206","156.1526","149.9687","144.7413","138.8205","134.8843","131.305","127.0114"]},
        {cc:["200","267.5388","260.735","255.2638","249.4452","241.0578","233.9942","226.021","220.7441","216.6088","213.1022","209.9854","207.1244","204.4337","201.8526","199.3337","196.8359","194.3193","191.7409","189.0486","186.1717","183.0028","179.355","174.8353","168.2785","162.728","156.4321","152.2408","148.4262","143.842"]},
        {cc:["250","324.8306","317.3609","311.346","304.9393","295.6885","287.8815","279.0504","273.1944","268.5987","264.697","261.2253","258.0355","255.0327","252.1497","249.3337","246.5387","243.7202","240.8297","237.8085","234.5768","231.0128","226.9048","221.8059","214.3915","208.0978","200.9387","196.1604","191.802","186.5537"]},
        {cc:["300","381.4239","373.3509","366.8439","359.9064","349.8745","341.3951","331.7885","325.409","320.3971","316.1383","312.346","308.8589","305.5741","302.4182","299.3336","296.27","293.1786","290.0062","286.6878","283.1353","279.2143","274.6901","269.0679","260.8781","253.9122","245.9727","240.6631","235.8126","229.962"]},
        {cc:["500","603.4458","593.358","585.206","576.4931","563.8514","553.1269","540.9303","532.8028","526.4014","520.9505","516.0874","511.6081","507.3816","503.3147","499.3335","495.3734","491.3709","487.2569","482.9462","478.3231","473.2099","467.2962","459.9261","449.1467","439.936","429.3874","422.3034","415.8081","407.9458"]},
        {cc:["600","712.7726","701.8322","692.9809","683.5155","669.769","658.0936","644.8004","635.9329","628.8157","622.9876","617.6713","612.7718","608.1468","603.6942","599.3335","594.9938","590.6057","586.093","581.3623","576.2859","570.6681","564.1661","556.056","544.1801","534.0185","522.3654","514.5285","507.3385","498.6219"]}, 
        )
    var pos = 0
    var pos2 = 0
    console.log("num2 "+num2)
    for (let index = 1; index < chi.length; index++) {
        if(chi[index].cc[0] == num2){
            pos = index
        }  
    }
    for (let index2 = 0; index2 < 30; index2++) {
        if (chi[0].ini[index2] == num1){
            pos2 = index2
        }
    }
    console.log("pos"+pos)
    console.log("pos2"+pos2)
    return chi[pos].cc[pos2]
}

function ks(num1,num2) {
    var ks =[]
    ks.push(
        {ini:["n","0.20","0.1","0.05","0.02","0.01","0.005","0.002","0.001"]},
        {cc:["1","0.90000","0.95000","0.97500","0.99000","0.99500","0.99750","0.99900","0.99950"]},
        {cc:["2","0.68337","0.77639","0.84189","0.90000","0.92929","0.95000","0.96838","0.97764"]},
        {cc:["3","0.56481","0.63604","0.70760","0.7","8456","0.82900","0.86428","0.90000","0.92065"]},
        {cc:["4","0.49265","0.56522","0.62394","0.68887","0.73424","0.77639","0.82217","0.85047"]},
        {cc:["5","0.44698","0.50945","0.56328","0.62718","0.66853","0.70543","0.75000","0.78137"]},
        {cc:["6","0.41037","0.46799","0.51926","0.5774","1","0.61661","0.65287","0.69571","0.72479"]},
        {cc:["7","0.38148","0.43607","0.48342","0.53844","0.57581","0.60975","0.65071","0.67930"]},
        {cc:["8","0.35831","0.40962","0.45427","0.50654","0.54179","0.57429","0.61368","0.64098"]},
        {cc:["9","0.33910","0.38746","0.43001","0.47960","0.51332","0.54443","0.58210","0.60846"]},
        {cc:["10","0.32260","0.36866","0.40925","0.45562","0.48893","0.51872","0.55500","0.58042"]},
        {cc:["11","0.30829","0.35242","0.39122","0.43670","0.46770","0.49539","0.53135","0-55588"]},
        {cc:["12","0.29577","0.33815","0.37543","0.41918","0.44905","0.47672","0.51047","0.53422"]},
        {cc:["13","0.28470","0.32549","0.36143","0.40362","0.43247","0.45921","0.49189","0.51490"]},
        {cc:["14","0.27481","0.31417","0.34890","0.38970","0.41762","0.44352","0.47520","0.49753"]},
        {cc:["15","0.26589","0.30397","0.33750","0.37713","0.40420","0.42934","0.45611","0.48182"]},
        {cc:["16","0.25778","0.29472","0.32733","0.36571","0.39201","0.41644","0.44637","0.46750"]},
        {cc:["17","0.25039","0.28627","0.31796","0.35528","0.38086","0.40464","0.43380","0.45540"]},
        {cc:["18","0.24360","0.27851","0.30936","0.34569","0.37062","0.39380","0.42224","0.44234"]},
        {cc:["19","0.23735","0.27136","0..30143","0.33685","0.36117","0.38379","0.41156","0.43119"]},
        {cc:["20","0.23156","0.26473","0.29408","0.32866","0.35241","0.37451","0.40165","0.42085"]},
        {cc:["21","0.22517","0.25858","0.28724","0.32104","0.34426","0.36588","0.39243","0.41122"]},
        {cc:["22","0.2215","0.25283","0.28087","0.31394","0.33666","0.35782","0.38382","0.40223"]},
        {cc:["23","0.21646","0.24746","0.2749","0.30728","0.32954","0.35027","0.37575","0.39380"]},
        {cc:["24","0.21205","0.24242","0.26931","0.30104","0.32286","0.34318","0.36787","0.38588"]},
        {cc:["25","0.20790","0.23768","0.26404","0.29518","0.31657","0.33651","0.36104","0.37743"]},
        {cc:["26","0.20399","0.23320","0.25908","0.28962","0.30963","0.33022","0.35431","0.37139"]},
        {cc:["27","0.20030","0.22898","0.25438","0.28438","0.30502","0.32425","0.34794","0.36473"]},
        {cc:["28","0.19680","0.22497","0.24993","0.27942","0.29971","0.31862","0.34190","0.35842"]},
        {cc:["29","0.19348","0.22117","0.24571","0.27471","0.29466","0.31327","0.33617","0.35242"]},
        {cc:["30","0.19032","0.21756","0.24170","0.27023","0.28986","0.30818","0.33072","0.34672"]},
        {cc:["31","0.18732","0.21412","0.23788","0.26596","0.28529","0.30333","0.32553","0.34129"]},
        {cc:["32","0.18445","0.21085","0.23424","0.26189","0.28094","0.29870","0.32058","0.33611"]},
        {cc:["33","0.18171","0.20771","0.23076","0.25801","0.27577","0.29428","0.31584","0.33115"]},
        {cc:["34","0.17909","0.21472","0.22743","0.25429","0.27271","0.29005","0.31131","0.32641"]},
        {cc:["35","0.17659","0.20185","0.22425","0.25073","0.26897","0.28600","0.30597","0.32187"]},
        {cc:["36","0.17418","0.19910","0.22119","0.24732","0.26532","0.28211","0.30281","0.31751"]},
        {cc:["37","0.17188","0.19646","0.21826","0.24404","0.26180","0.27838","0.29882","0.31333"]},
        {cc:["38","0.16966","0.19392","0.21544","0.24089","0.25843","0.27483","0.29498","0.30931"]},
        {cc:["39","0.16753","0.19148","0.21273","0.23785","0.25518","0.27135","0.29125","0.30544"]},
        {cc:["40","0.16547","0.18913","0.21012","0.23494","0.25205","0.26803","0.28772","0.30171"]},
        {cc:["41","0.16349","0.18687","0.20760","0.23213","0.24904","0.26482","0.28429","0.29811"]},
        {cc:["42","0.16158","0.18468","0.20517","0.22941","0.24613","0.26173","0.28097","0.29465"]},
        {cc:["43","0.15974","0.18257","0.20283","0.22679","0.24332","0.25875","0.27778","0.29130"]},
        {cc:["44","0.15795","0.18051","0.20056","0.22426","0.24060","0.25587","0.27468","0.28806"]},
        {cc:["45","0.15623","0.17856","0.19837","0.22181","0.23798","0.25308","0.27169","0.28493"]},
        {cc:["46","0.15457","0.17665","0.19625","0.21944","0.23544","0.25038","0.26880","0.28190"]},
        {cc:["47","0.15295","0.17481","0.19420","0.21715","0.23298","0.24776","0.26600","0.27896"]},
        {cc:["48","0.15139","0.17301","0.19221","0.21493","0.23059","0.24523","0.26328","0.27611"]},
        {cc:["49","0.14987","0.17128","0.19028","0.21281","0.22832","0.24281","0.26069","0.27339"]},
        {cc:["50","0.14840","0.16959","0.18841","0.21068","0.22604","0.24039","0.25809","0.27067"]})
        var pos = 0
        var pos2 = 0
        for (let index = 0+1; index < ks.length; index++) {
            if(ks[index].cc[0] == num2){
                pos = index
            }  
        }
        for (let index2 = 0; index2 < 9; index2++) {
            if (ks[0].ini[index2] == num1){
                pos2 = index2
            }
        }
        let nn = 0.0;
        if (num2>50){
            if(num1 == 0.20){
                nn = 1.07/Math.sqrt(num2);
            }
            if(num1 == 0.10){
                nn = 1.22/Math.sqrt(num2);
            }
            if(num1 == 0.05){
                nn = 1.36/Math.sqrt(num2);
            }
            if(num1 == 0.02){
                nn = 1.52/Math.sqrt(num2);
            }
            if(num1 == 0.01){
                nn = 1.63/Math.sqrt(num2);
            }
            if(num1 == 0.005){
                nn = 1.73/Math.sqrt(num2);
            }
            if(num1 == 0.002){
                nn = 1.85/Math.sqrt(num2);
            }
            if(num1 == 0.001){
                nn = 1.95/Math.sqrt(num2);
            }
        }else{
            nn= ks[pos].cc[pos2]           
        }
        //System.out.println("resultado  "+nn);
        return nn;
}

//PRUEBA DE MEDIAS
function PruebaMedia(){
    if(pseudo.length==0){
        alert("No hay Números para realizar la prueba")
    }else{
        var suma = 0.0
        for (let index = 0; index < pseudo.length; index++) {
        suma= suma+parseFloat(pseudo[index])
        }
        var R = (1/cantidad)*suma
        console.log("suma "+suma)
        var LI = 0
        var LS = 0
        var con=parseInt(formdatos.nivel.value)
        var nivel = confianza(con)
        console.log("nivel. "+nivel)
        if (nivel == 0){
            alert("Ingrese un nivel de confianza válido..")
        }else{
            var contenido
            LI = (1/2)-(nivel*(1/Math.sqrt(12*cantidad)))
            console.log("LI : "+LI)
            LS  = (1/2)+(nivel*(1/Math.sqrt(12*cantidad)))
            if(R>=LI && R<=LS){
                contenido = "Como el valor del promedio :  r ="+ R.toFixed(3) +
                " se encuentra entre  los límites de aceptación (LI: "+LI.toFixed(7)
                +", LS: "+LS.toFixed(7)
                +") se concluye  que no  se puede  rechazar  el  conjunto  de "+
                cantidad +" números  r. tiene  un valor  esperado  de 0.5 ,  con un nivel  de aceptación  de "+con+"%"
                document.getElementById("resultados").innerHTML = contenido
            }else{
            
                contenido = "Como el valor del promedio :  r ="+ R.toFixed(3) +
                " NO se encuentra entre  los límites de aceptación (LI: "+LI.toFixed(7)
                +", LS: "+LS.toFixed(7)
                +") se concluye  que se puede  rechazar  el  conjunto  de "+
                cantidad +" números  r. pues No tiene  un valor  esperado  de 0.5 ,  con un nivel  de aceptación  de "+con+"%"
                document.getElementById("resultados").innerHTML = contenido
            }
        }
    }
}
//PRUEBA DE VARIANZA
function PruebaVarianza(){
    if(pseudo.length==0){
        alert("No hay Números para realizar la prueba")
    }else{
        var suma = 0.0
        for (let index = 0; index < pseudo.length; index++) {
        suma= suma+parseFloat(pseudo[index])
        }
        var Vr = 0
        Vr = (1/(cantidad-1))*suma
        console.log("Vr: "+Vr)
        console.log("cantidad: "+cantidad)
        var Nivelconfianza=parseInt(formdatos.nivel.value)
        var LS =0, LI =0
        var alfa = (100-Nivelconfianza)/100
        var cc = cantidad-1
        var tLS = ChiCuadrado((alfa/2),(cc))
        var tLI = ChiCuadrado((1-(alfa/2)),(cc))
        console.log("su "+tLS)
        console.log("inf "+tLI)
        LS = tLS/(12*(cantidad-1))
        LI = tLI/(12*(cantidad-1))
        console.log("LI"+LI)
        console.log("LS"+LS)
        var contenido
        if (Vr>=LI && Vr<=LS){
            contenido = "Dado que el valor de la varianza V(r) = "+Vr.toFixed(5)+
            " Está entre los limites de aceptacion ( LI: "+LI.toFixed(5)
            +", LS "+LS.toFixed(5)+") podemos decir que no se puede rechazar que el conjunto de "
            +cantidad +" números, iene un varianza de 1/12"
            document.getElementById("resultados").innerHTML = contenido
        }else{
            contenido = "Dado que el valor de la varianza V(r) = "+Vr.toFixed(5)+
            " NO está entre los limites de aceptacion ( LI: "+LI.toFixed(5)
            +", LS "+LS.toFixed(5)+") podemos decir que se puede rechazar que el conjunto de "
            +cantidad
            document.getElementById("resultados").innerHTML = contenido
        }
    } 
}
///PRUEBAS DE UNIFORMIDAD
//PRUEBA CHI CUADRADA
function PruebaChiCuadrada(){
    if(pseudo.length==0){
        alert("No hay Números para realizar la prueba")
    }else{
        var inicial = 0.0000
        var rangos = []
        var m = Math.sqrt(cantidad)
        console.log(pseudo)
        console.log("pseudo")
        var cantDigitos = (pseudo[0].toString(10).length)-2
        console.log("cantDigitos "+cantDigitos)
        var ceros = ""
        for (var index2 = 0; index2 < cantDigitos-1; index2++) {ceros = "0" + ceros}
        ceros = "0." + ceros+"1"
        for (var index = 1; index < m+1 ; index++) {
            var1 = inicial
            var2 = (index/m)
            rangos.push({
                o: var1.toFixed(cantDigitos),
                i: var2.toFixed(cantDigitos)
            })
            inicial =var2+parseFloat(ceros)
        }
        //console.log(rangos)
        var contador = []
        var cc = 0
        rangos.map((value2, key2) =>{
            pseudo.map((value, key) =>{
                if(value>= value2.o && value<=value2.i){
                    cc++;
                }
            })
            contador.push({
                cnt: cc
            })
            cc=0;
        });
        var ei = cantidad/m
        //console.log("contador")
        //console.log(contador)
        var formula = []
        contador.map((value2, key2) =>{
            formula.push({
                k: (Math.pow((ei-value2.cnt),2))/ei
            })
        });
        var xo = 0
        formula.map((value2, key2) =>{
            xo = value2.k+xo
        })
        var Nivelconfianza=parseInt(formdatos.nivel.value) 
        var chi = 0 
        chi = 100-Nivelconfianza
        console.log(" chi: "+ChiCuadrado((chi/100),(contador.length-1)))
        var chi2 =0
        var contenido =""
        contenido = " <tr> <td  colspan='4'> Cálculos para la prueba Chi-Cuadrada </td> </tr>"+
        " <tr><th> Intervalo  </th>   "+
        " <th> Oi </th>"+
        " <th> Ei </th>"+
        " <th>   </th> </tr>"
        for (let index = 0; index < rangos.length; index++) {
            contenido = contenido+"  <tr><td> ("+rangos[index].o+" , "+rangos[index].i+") </td> <td>"+contador[index].cnt+"</td><td>"+ei.toFixed(2)+"</td><td>"+formula[index].k.toFixed(3)+"</td></tr>"
           
            
        }
        chi2 = ChiCuadrado((chi/100),(contador.length-1))
        if(xo<chi2){
            contenido =contenido+ "<tr> <td  colspan='4'>El estadístico Xo^2 = " +xo.toFixed(4)+
            " es menor al estadístico correspondiente de la chi-cuadrada X^2 ("+
            (chi/100)+","+(contador.length-1)+"  ) = "+chi2+". En consecuencia, no se puede rechazar que los números ri Siguen una distribución uniforme. </td></tr>"
            document.getElementById("resultados").innerHTML = contenido
        }else{
            contenido =contenido+ "<tr> <td  colspan='4'>El estadístico Xo^2 = " +xo.toFixed(4)+
            " es mayor al estadístico correspondiente de la chi-cuadrada X^2 ("+
            (chi/100)+","+(contador.length-1)+"  ) = "+chi2+". En consecuencia, se puede rechazar que los números ri pues NO Siguen una distribución uniforme.</td></tr>"
            document.getElementById("resultados").innerHTML = contenido
        }
        //console.log(formula)
    }
}



